
Функция ПолучитьКоличествоСпринтов()
	
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаботаПоSCRUMТочки.Ссылка
		|ИЗ
		|	БизнесПроцесс.ПланПроекта.Точки КАК РаботаПоSCRUMТочки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	КоличествоСпринтовПоПроцессу = 0;
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Если ВыборкаДетальныеЗаписи.Ссылка.Вид = ВидТочкиМаршрутаБизнесПроцесса.ВложенныйБизнесПроцесс Тогда
			КоличествоСпринтовПоПроцессу = КоличествоСпринтовПоПроцессу + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	Возврат КоличествоСпринтовПоПроцессу;
	
КонецФункции

&НаСервере
Процедура ПриИзмененииПараметровПланированияНаСервере()
	// Вставить содержимое обработчика.
	
	_количествоСпринтов = ПолучитьКоличествоСпринтов();
	
	ОкончаниеПроекта = НачалоПроекта + _количествоСпринтов * ДнейНаСпринт * 86400 + _количествоСпринтов * СкоростьПереключенияПроекта * 86400;
	
	ОтклонениеОтОжиданийЗаказчика = (НачалоДня(ОжиданиеЗаказчика) - НачалоДня(НачалоПроекта)) / 86400;
	
	ПланировщикПроекта.ТекущиеПериодыОтображения.Очистить();
	ПланировщикПроекта.ТекущиеПериодыОтображения.Добавить(НачалоПроекта, ОкончаниеПроекта);
	
	// Инициализируем измерения планировщика
    ИзмеренияПланировщика   = ПланировщикПроекта.Измерения;
    ИзмеренияПланировщика.Очистить();
	
	#Область Заполнение_измерений
    // Создание группы Магазины
    ИзмерениеПроекты       = ИзмеренияПланировщика.Добавить("Проект");
	ИзмерениеПроекты = ИзмерениеПроекты.Элементы.Добавить("Строка");
    ИзмерениеПроекты.Текст = "Проект как продукт (черновик)";

	#КонецОбласти
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РаботаПоSCRUMТочки.Ссылка
		|ИЗ
		|	БизнесПроцесс.ПланПроекта.Точки КАК РаботаПоSCRUMТочки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ЭлементыПланировщика = ПланировщикПроекта.Элементы;
    ЭлементыПланировщика.Очистить();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		 НовыйЭлемент = ЭлементыПланировщика.Добавить(НачалоПроекта, НачалоПроекта);
				
	КонецЦикла
	

	
КонецПроцедуры


&НаКлиенте
Процедура НачалоПроектаПриИзменении(Элемент)
	ПриИзмененииПараметровПланированияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДнейНаСпринтПриИзменении(Элемент)
	ПриИзмененииПараметровПланированияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура СкоростьПереключенияПроектаПриИзменении(Элемент)
	ПриИзмененииПараметровПланированияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОжиданиеЗаказчикаПриИзменении(Элемент)
	ПриИзмененииПараметровПланированияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ПриОткрытииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриОткрытииНаСервере()
	
	НачалоПроекта = ТекущаяДата();
	ДнейНаСпринт = 14;
	СкоростьПереключенияПроекта = 1;
	ОжиданиеЗаказчика = ДобавитьМесяц(ТекущаяДата(),2);
	
	ПриИзмененииПараметровПланированияНаСервере();
	
		
	
КонецПроцедуры
